plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk 33
    defaultConfig {
        applicationId "be.marche.apptravaux"
        minSdk 26
        targetSdk 33
        versionCode 28
        versionName "1.4.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'be.marche.apptravaux'
    lint {
        baseline file('lint-baseline.xml')
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$material_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    /**
     * viewmodel in compose
     */
    implementation 'androidx.fragment:fragment-ktx:1.5.5'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'

    /**
     * Using hilt for DI
     */
    implementation 'com.google.dagger:hilt-android:2.45'
    kapt 'com.google.dagger:hilt-compiler:2.45'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    /**
     * My networking stuff cause Retrofit is da best.
     */
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.6.0'

    /**
     * coroutines for async operations
     */
    def lifecycle_version_kt = "2.5.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version_kt"

    /**
     * Room
     */
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    /**
     * Navigation
     */
    implementation('androidx.navigation:navigation-compose:2.5.3')
    /**
     * Tools
     */
    /**
     * using Glide as image loading and caching solution
     * Using it vs other libraries because of loading performance efficiency
     */
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    kapt 'com.github.bumptech.glide:compiler:4.14.2'
    implementation('io.coil-kt:coil-compose:2.2.2')
    def timber_version = '5.0.1'
    implementation "com.jakewharton.timber:timber:$timber_version"

    /**
     * Firebase
     */
    implementation platform('com.google.firebase:firebase-bom:31.2.1')
    implementation "com.google.firebase:firebase-crashlytics-ktx"
    implementation 'com.google.firebase:firebase-analytics-ktx'

    /**
     * Permission
     */
    implementation "com.google.accompanist:accompanist-permissions:0.25.0"

    /**
     * Google Map
     */
    implementation 'com.google.maps.android:maps-compose:2.10.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    // Make sure to also include the latest version of the Maps SDK for Android
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    /**
     * work manager
     */
    def work_version = "2.8.0"
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'
    // optional - GCMNetworkManager support
    implementation("androidx.work:work-gcm:$work_version")
    //app start up
    implementation("androidx.startup:startup-runtime:1.1.1")

    //FlowLayout
    implementation "com.google.accompanist:accompanist-flowlayout:0.20.0"
}
